<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2012. Axon Framework
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation=
          "http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.axonframework.org/schema/core
           http://www.axonframework.org/schema/axon-core.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <axon:annotation-config/>
    <context:annotation-config/>
    <context:component-scan base-package="com.icoin.trading.tradeengine"/>

    <!--<context:property-placeholder-->
    <!--location="classpath:com/icoin/trading/tradeengine/infrastructure/persistence/mongo/mongo-db.dev.properties"/>-->


    <axon:event-bus id="eventBus"/>

    <axon:command-bus id="commandBus">
        <axon:dispatchInterceptors>
            <bean class="org.axonframework.commandhandling.interceptors.BeanValidationInterceptor"/>
        </axon:dispatchInterceptors>
    </axon:command-bus>

    <bean id="commandGateway" class="org.axonframework.commandhandling.gateway.CommandGatewayFactoryBean">
        <property name="commandBus" ref="commandBus"/>
    </bean>

    <!--<bean id="eventStore" class="org.axonframework.eventstore.mongo.MongoEventStore">-->
    <!--<constructor-arg ref="mongoTemplate"/>-->
    <!--</bean>-->

    <bean id="axon.mongoTemplate" class="com.icoin.axonsupport.infrastructure.mongo.EventStoreTemplete">
        <constructor-arg ref="trade.mongoDbFactory"/>
    </bean>

    <bean id="axon.mongoSagaTemplate"
          class="com.icoin.axonsupport.infrastructure.mongo.SagaTemplate">
        <constructor-arg ref="trade.mongoDbFactory"/>
    </bean>

    <bean id="sagaRepository" class="org.axonframework.saga.repository.mongo.MongoSagaRepository">
        <constructor-arg ref="axon.mongoSagaTemplate"/>
        <property name="resourceInjector">
            <bean class="org.axonframework.saga.spring.SpringResourceInjector"/>
        </property>
    </bean>

    <bean id="snapshotter" class="org.axonframework.eventsourcing.SpringAggregateSnapshotter">
        <property name="eventStore" ref="eventStore"/>
        <property name="executor" ref="taskExecutor"/>
    </bean>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="20"/>
        <property name="maxPoolSize" value="50"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
    </bean>

    <!-- TODO jettro : come up with a more than default configuration for caching -->
    <bean id="ehcache" class="net.sf.ehcache.jcache.JCache">
        <constructor-arg>
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean"/>
        </constructor-arg>
    </bean>

</beans>